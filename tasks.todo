- expense on its own should enter the command mode, where 'a/+' (or e/i/w) is add,
  b is balance, l is last etc.

The add command:
- Allow adding income, rides and withdrawals.
  - Later add these into the add command and switch between them by 't' (type).
    - That would need moving asking for desc & total into the main program and
      also unloading the commands and replacing them.
- Support custom_data or inherit ExpenseWithUnitPrice that extends the data.
- Track running_total directly for accounts, not only for cash (have an equivalent
  of the withdrawal object, maybe review that can be done manually (expense balance
  review or so) ideally every Sunday).
- Add support for recurrent payments (#recurrent?).
- Finish the tag editor.
  - One tag? required? One is easier to manage in the CLI app.
    # TYPES = ['indulgence', 'essential', 'travelling', 'long_term', 'gift']
    tag :gift, :long_term
- Quit input of e/t/n commands.
- Find <bright_black>.
- Add an optional enjoyment level: enjoyed (but not worth the price), enjoyed and
  was worth the price and didn't enjoy.
- Finish the review command based on metadata.last_review.{note,date}.
- Shall the total be total without tip? I think it makes more sense, esp. with coins.

- Tag with 1.0.

- Add quaterly and yearly reports.
- Numbers could be expressions like 2 * 3.40.
