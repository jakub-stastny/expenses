The add command:
- Allow adding income and withdrawals.
  - Later add these into the add command and switch between them by 't' (type).
    - That would need moving asking for desc & total into the main program and
      also unloading the commands and replacing them.
- Support custom_data or inherit ExpenseWithUnitPrice that extends the data.
- Finish the tag editor.
  - One tag? required? One is easier to manage in the CLI app.
  - Tags: add #recurrent, reduce their number and add #indulgence, #long_term, #gift, maybe #travelling.
- Quit input of e/t/n commands.
- Find <bright_black>.
- Add an optional enjoyment level: enjoyed (but not worth the price), enjoyed and
  was worth the price and didn't enjoy.
- Shall the total be total without tip? I think it makes more sense, esp. with coins.

Budgets:
- Weekly day-to-day budget. Weekly, rather than daily, to account for shopping cycles.
  - Should it be one or should it differ per location?
- Pleasures: from alcohol to flights to Colombia.
- Values of long-term value: bike, razor etc.

Come up with a savings scheme.

- Finish the review command based on metadata.last_review.{note,date}.
- bin/expense on its own should enter the command mode, where 'a/+' (or e/i/w) is add,
  b is balance, l is last etc.

- Tag with 1.0.

- Add quaterly and yearly reports.
- Numbers could be expressions like 2 * 3.40.
